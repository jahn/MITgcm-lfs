Example: "Cubed Sphere Simulation with Seasonal Forcing"
MITgcm/tutorial_examples/global_ocean.cubed_wEXF
=======================================

Build:

  ../../../tools/genmake -mods=../code   -fc=ifc
  make depend
  make

  Packages exf and cal are enabled by .genmakerc

Two runs using exf package
  1)  No Kpp
  2)  w/ Kpp

Changes to exf package
  1)  Put in changes for periodic forcing.  These 
are checked into main branch.
  2a)  Added a lw outgoing term to hfl (net heat flux)
  exf_getffields.F
  2b)  Changed internal scaling of "evap" term


c     Add all contributions.
      do bj = mybylo(mythid),mybyhi(mythid)
        do bi = mybxlo(mythid),mybxhi(mythid)
          do j = 1,sny
            do i = 1,snx
c             Net surface heat flux.
#ifdef ALLOW_ATM_TEMP
              hfl = 0. _d 0
              hfl = hfl - hs(i,j,bi,bj)
              hfl = hfl - hl(i,j,bi,bj)
              hfl = hfl + lwflux(i,j,bi,bj)
cCurt         upward lw radiation W/m^2 = emissivity * stefan * T^4  (K)
              hfl = hfl + 0.985 * stefan * (theta(i,j,k,bi,bj)+cen2kel )**4
#ifndef ALLOW_KPP
              hfl = hfl + swflux(i,j,bi,bj)
#endif /* ALLOW_KPP undef */
c             Heat flux:
              hflux(i,j,bi,bj) = hfl*maskc(i,j,1,bi,bj)
c             Salt flux from Precipitation and Evaporation.
CCurt              sflux(i,j,bi,bj) = precip(i,j,bi,bj) - evap(i,j,bi,bj)
              sflux(i,j,bi,bj) = precip(i,j,bi,bj) - evap(i,j,bi,bj)/1000.
#endif /* ALLOW_ATM_TEMP */

#else
              hflux(i,j,bi,bj) = hflux(i,j,bi,bj)*maskc(i,j,1,bi,bj)
              sflux(i,j,bi,bj) = sflux(i,j,bi,bj)*maskc(i,j,1,bi,bj)
#endif /* ALLOW_BULKFORMULAE */

#ifdef ALLOW_RUNOFF
              sflux(i,j,bi,bj) = sflux(i,j,bi,bj) + 
     &                           runoff(i,j,bi,bj)*maskc(i,j,1,bi,bj)
#endif /* ALLOW_RUNOFF */

            enddo
          enddo
        enddo
      enddo

    
3)  Changed exf_mapfields.F to use E-P that is computed
   in exf_getffields.F (instead of "precip" only).

          do j = jmin,jmax
            do i = imin,imax
c             Salt flux.
#if (defined (ALLOW_BULKFORMULAE)  && defined (ALLOW_ATM_TEMP))
cCurt              empmr(i,j,bi,bj) = scal_prc*precip(i,j,bi,bj)  ! wrong
              empmr(i,j,bi,bj) = scal_sfl*sflux(i,j,bi,bj)
#else
              empmr(i,j,bi,bj) = scal_sfl*sflux(i,j,bi,bj)
#endif
            enddo
          enddo


4) Some diagnostic output (time averages, etc) of forcing
fields and computed terms (E-P and Qnet).
Curt created new routines:  exf_diag.h, exf_diags.F, exf_tave.F

5) Added wind speed on tracer points for bulk forcing (windspeedfile)
   If you interpolate this from uwindspeed and vwindspeed, there
  is a mask error and an interpolation error which cause problems.

============================================================================

Compile switches Combinations


1) Compute bulk forcing for EmPmR and Qnet but use prescribed wind stress
(This is the set that Curt ended up using)
EXF_CPPOPTIONS.h
ALLOW_BULKFORMULAE
ALLOW_ATM_TEMP
  atempfile  ! Atmospheric temperature.
  aqhfile    ! Atmospheric humidity.
  lwfile     ! Downward LW radiation
  precipfile ! precipitation
  windspeedfile ! wind speed (tracer points) -- Curt added
ALLOW_KPP
  swfluxfile ! Downard SW radiation
~ALLOW_ATM_WIND
  ustressfile - zonal wind stress - u grid
  vstressfile - meridional wind stress - v grid

2) Compute bulk forcing for EmPmR and Qnet and compute wind stress
EXF_CPPOPTIONS.h
ALLOW_BULKFORMULAE
ALLOW_ATM_TEMP
  atempfile  ! Atmospheric temperature.
  aqhfile    ! Atmospheric humidity.
  lwfile     ! Downward LW radiation
  precipfile ! precipitation
  windspeedfile ! wind speed (tracer points) -- Curt added
ALLOW_KPP
  swfluxfile ! Downard SW radiation
ALLOW_ATM_WIND
  uwindspeed ! zonal wind speed - u grid
  vwindspeed ! meridional wind speed - v grid



3) Use EXF package and prescribed forcing
EXF_CPPOPTIONS.h
~ALLOW_BULKFORMULAE
    sfluxfile - E-P
    hfluxfile - Net atmospheric heat flux (minus downward SW)
    ustressfile - zonal wind stress
    vstressfile - meridonal wind stress
ALLOW_KPP
  swfluxfile ! Downard SW radiation
